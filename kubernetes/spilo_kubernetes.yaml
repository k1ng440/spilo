apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: postgres-spilo
  labels:
    application: spilo
    spilo-cluster: postgres-spilo
spec:
  replicas: 3
  serviceName: postgres-spilo
  template:
    metadata:
      labels:
        application: spilo
        spilo-cluster: postgres-spilo
      annotations:
        # kube2iam should be running in a cluster and app-spilo role
        # needs to be created in the AWS account  the cluster is 
        # running in. It will be used to ship WALs, and requires
        # access to S3 bucket. See https://github.com/jtblin/kube2iam
        # for the sts::AssumeRole snippets to build trust relationship
        # between the kubernetes woker role and the one below.
        # Note: if you don't use AWS, feel free to remove this annotation.
        iam.amazonaws.com/role: app-spilo
    spec:
      # service account that allows changing endpoints and assigning pod labels
      # in the given namespace: https://kubernetes.io/docs/user-guide/service-accounts/
      # not required unless you've changed the default service account in the namespace
      # used to deploy Spilo
      serviceAccountName: spilo
      containers:
      - name: spilo
        image: registry.opensource.zalan.do/acid/spilo-11:1.5-p5  # put the spilo image here
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8008
          protocol: TCP
        - containerPort: 5432
          protocol: TCP
        volumeMounts:
        - mountPath: /home/postgres/pgdata
          name: pgdata
        env:
        - name: DCS_ENABLE_KUBERNETES_API
          value: 'true'
#        - name: ETCD_HOST
#          value: 'test-etcd.default.svc.cluster.local:2379' # where is your etcd?
#        - name: WAL_S3_BUCKET
#          value: example-spilo-dbaas
#        - name: LOG_S3_BUCKET # may be the same as WAL_S3_BUCKET
#          value: example-spilo-dbaas
#        - name: BACKUP_SCHEDULE
#          value: "00 01 * * *"
        - name: KUBERNETES_SCOPE_LABEL
          value: spilo-cluster
        - name: KUBERNETES_ROLE_LABEL
          value: role
        - name: SPILO_CONFIGURATION
          value: | ## https://github.com/zalando/patroni#yaml-configuration
            bootstrap:
              initdb:
                - auth-host: md5
                - auth-local: trust
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: PGPASSWORD_SUPERUSER
          valueFrom:
            secretKeyRef:
              name: postgres-spilo
              key: superuser-password
        - name: PGUSER_ADMIN
          value: superadmin
        - name: PGPASSWORD_ADMIN
          valueFrom:
            secretKeyRef:
              name: postgres-spilo
              key: admin-password
        - name: PGPASSWORD_STANDBY
          valueFrom:
            secretKeyRef:
              name: postgres-spilo
              key: replication-password
        - name: SCOPE
          value: postgres-spilo
        - name: PGROOT
          value: /home/postgres/pgdata/pgroot
      terminationGracePeriodSeconds: 0
      # forces the scheduler not to put pods on the same node.
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  application: spilo
                  spilo-cluster: postgres-spilo
                  
  volumeClaimTemplates:
  - metadata:
      name: pgdata
      labels:
        application: spilo
        spilo-cluster: postgres-spilo
    spec:
      accessModes:
      - ReadWriteOnce
      storageClassName: standard        
      resources:
        requests:
          storage: 10Gi

---
apiVersion: v1
kind: Endpoints
metadata:
  name: postgres-spilo
  labels:
    application: spilo
    spilo-cluster: postgres-spilo
subsets: []

# Services
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-spilo
  labels:
    application: spilo
    spilo-cluster: postgres-spilo
spec:
  type: ClusterIP
  ports:
  - name: postgresql
    port: 5432
    targetPort: 5432

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-spilo-replica
  labels:
    application: spilo
    spilo-cluster: postgres-spilo
spec:
  type: ClusterIP
  selector:
    application: spilo
    spilo-cluster: postgres-spilo
    role: replica
  ports:
  - name: postgresql
    port: 5432
    targetPort: 5432

---
# headless service to avoid deletion of patronidemo-config endpoint
apiVersion: v1
kind: Service
metadata:
  name: postgres-spilo-config
  labels:
    application: spilo
    spilo-cluster: postgres-spilo
spec:
  clusterIP: None

---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-spilo
  labels:
    application: spilo
    spilo-cluster: postgres-spilo
type: Opaque
data:
  superuser-password: emFsYW5kbw==
  replication-password: cmVwLXBhc3M=
  admin-password: YWRtaW4=
